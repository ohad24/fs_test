apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-deployment
  labels:
    app: test-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
      - name: test-app
        image: gcr.io/neat-tempo-205717/app1:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "0.2"
          requests:
            memory: "64Mi"
            cpu: "10m"
        volumeMounts:
        - name: firebase-sa-token
          mountPath: "/app/secrets/fb/"
          readOnly: true
        - name: application-secret-key
          mountPath: "/app/secrets/key/"
          readOnly: true
      volumes:
      - name: firebase-sa-token
        secret:
          secretName: firebase-sa-token
      - name: application-secret-key
        secret:
          secretName: application-secret-key

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-web-deployment
  labels:
    app: test-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-web
  template:
    metadata:
      labels:
        app: test-web
    spec:
      containers:
      - name: test-web
        image: gcr.io/neat-tempo-205717/web1:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "0.2"
          requests:
            memory: "64Mi"
            cpu: "10m"
---

apiVersion: v1
kind: Service
metadata:
  name: test-app-service
spec:
  # type: LoadBalancer
  type: NodePort
  selector:
    app: test-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000


---

apiVersion: v1
kind: Service
metadata:
  name: test-web-service
spec:
  # type: LoadBalancer
  type: NodePort
  selector:
    app: test-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: kube-main
    # kubernetes.io/ingress.allow-http: "false"
    networking.gke.io/v1beta1.FrontendConfig: lb-http2https
spec:
  tls:
  - secretName: web-tls
  rules:
  - http:
      paths:
      - path: /api/*
        backend:
          serviceName: test-app-service
          servicePort: 80
      - path: /api/
        backend:
          serviceName: test-app-service
          servicePort: 80
      - path: /*
        backend:
          serviceName: test-web-service
          servicePort: 80

---

apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: lb-http2https
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
